namespace net.minecraft.src
{
	public class GenLayerRiverMix : GenLayer
	{
		private GenLayer Field_35512_b;
		private GenLayer Field_35513_c;

		public GenLayerRiverMix(long par1, GenLayer par3GenLayer, GenLayer par4GenLayer) : base(par1)
		{
			Field_35512_b = par3GenLayer;
			Field_35513_c = par4GenLayer;
		}

		/// <summary>
		/// Initialize layer's local worldGenSeed based on its own baseSeed and the world's global seed (passed in as an
		/// argument).
		/// </summary>
		public override void InitWorldGenSeed(long par1)
		{
			Field_35512_b.InitWorldGenSeed(par1);
			Field_35513_c.InitWorldGenSeed(par1);
			base.InitWorldGenSeed(par1);
		}

		/// <summary>
		/// Returns a list of integer values generated by this layer. These may be interpreted as temperatures, rainfall
		/// amounts, or biomeList[] indices based on the particular GenLayer subclass.
		/// </summary>
		public override int[] GetInts(int par1, int par2, int par3, int par4)
		{
			int[] ai = Field_35512_b.GetInts(par1, par2, par3, par4);
			int[] ai1 = Field_35513_c.GetInts(par1, par2, par3, par4);
			int[] ai2 = IntCache.GetIntCache(par3 * par4);

			for (int i = 0; i < par3 * par4; i++)
			{
				if (ai[i] == BiomeGenBase.Ocean.BiomeID)
				{
					ai2[i] = ai[i];
					continue;
				}

				if (ai1[i] >= 0)
				{
					if (ai[i] == BiomeGenBase.IcePlains.BiomeID)
					{
						ai2[i] = BiomeGenBase.FrozenRiver.BiomeID;
						continue;
					}

					if (ai[i] == BiomeGenBase.MushroomIsland.BiomeID || ai[i] == BiomeGenBase.MushroomIslandShore.BiomeID)
					{
						ai2[i] = BiomeGenBase.MushroomIslandShore.BiomeID;
					}
					else
					{
						ai2[i] = ai1[i];
					}
				}
				else
				{
					ai2[i] = ai[i];
				}
			}

			return ai2;
		}
	}
}